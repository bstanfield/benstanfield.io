//- INCLUDES > MIXINS
mixin index_intro()
  .intro 
    +index_timer()
    h1#one #[span(class='emoji')]
    p#rebelReplace.
      I‚Äôm Ben Stanfield, a recent graduate of the #[+link('http://iovine-young.usc.edu', 'Iovine & Young Academy', "Undergrad program at USC. Took me a while to get this: pronounced 'I-owe-veen' üéß")], now working full-time on a company called  #[+link('https://projectwren.com', 'Wren', 'Helps individuals calculate and offset their carbon footprint! üåç')].
  br
  br

mixin index_timer()
  h1 #[span(id='time-leadup') WHAT I MIGHT BE UP TO AT #[span(id='time')]]
    

mixin img(path, params)
  .img-container
    if params
      if (params.size === 'full')
        img(class='primary-img full-img' src=path)
      else if (params.size === 'small')
        img(class='primary-img small-img' src=path)
      else if params.screenshot
        img(class='full-img' src=path)
      else if (params.shadow == false)
        img(class='primary-img no-boxshadow small-img left-align' src=path)
    else
      img(class='primary-img full-img' src=path)

mixin i(contentToItalicize)
  span(style='font-family: Lava Italic')!=contentToItalicize
//-
mixin project(color, title, description, img)
  .project-card.top(style="background-color:" + color + ";")
    .project-content
      h1 #{title}
      p #{description}
      button View more
      img(src="images/" + img)

mixin link(url, name, tooltip)
  a(target='_blank' class='orange-link' href=url title=tooltip)= name

mixin imgLink(item)
  if item.img
    li    
      .img-link(title=item.img) #{item.name} ‚ú®
  else
    li
      .img-link #{item.name}

mixin more()
  p.more Learn more <span>&rarr;</span>

mixin read()
  p.more Read article <span>&rarr;</span>

mixin contact()
  h1 Contact
  h6.italic (Mail goes to bnstnfld@gmail.com)

  form(accept-charset="UTF-8" action="https://formkeep.com/f/caa230f30e8d" method="POST")
    .label-input-group
      label(for='fname') NAME
      input(type='text' id='fname' name='firstname' placeholder='Full name')
    .label-input-group
      label(for='lname') EMAIL *
      input(type='email' id='email' name='email' placeholder='you@email.com' required)

    .label-input-group
      label(for='subject') MESSAGE *
      <textarea id="subject" name="subject" placeholder="What would you like to say?" style="height:200px" required></textarea>

    input(type='submit' value='Submit')

//- PROJECT PAGE
mixin introsection(title, sub, date, emoji)
  if emoji
    h1.big-emoji!= emoji
  h1.headline!= title
  h6!=sub
  p.update-line= new Date().toDateString()
  br

mixin quote(quote, byline)
  .quote
    h2 #{quote}

mixin widequote(quote, byline)
  .quote(style='width: 80%; display: block; max-width: 600px; margin-right: 30px;')
    h2 #{quote}
    p #{byline}

mixin article(url, iconpath, title, subtitle, sourcename, bgimage)
  <div style="clear: both;"></div>
  a(target='_blank' href=url).card.project-card
    img(src=iconpath)
    h2 #{title}
    p #{subtitle}
    
    p.more Read on #{sourcename} <span>&rarr;</span>
    .project-img(style=bgimage)

mixin reviewGallery(meta, hours, distance, arr)
  - const shopUrl = 'https://www.yelp.com/biz/' + meta.yelpUrl;
  - const heroImg = '../../images/projects/coffee/' + meta.heroImg;
  - const urlBase = 'https://s3-media3.fl.yelpcdn.com/bphoto/';
  - const date = new Date;

  .review
    - let anchorName = meta.shopName.replace(/\s/g, '');
    - anchorName = anchorName.replace(/&/g, 'And').replace('<istyle="color:red"class="fasfa-exclamation-circle"></i>', '');
    a.anchor(name=anchorName id=anchorName)
    h4.shop-name !{meta.shopName}
    br
    if meta.food[1]
      - const total = (meta.food[1] + meta.drink[1]).toFixed(2);
      .foodEst
        p <span class='meta-emoji'>&nbsp;üí∏&nbsp;</span> Expect to spend about <strong>$#{total}</strong> <sup>?</sup>
        .explainer
          p.explainerText ‚Ü≥&nbsp; #{meta.food[0]} ($#{meta.food[1].toFixed(2)}) + #{meta.drink[0]} ($#{meta.drink[1].toFixed(2)}) = $#{total}
    else
      .foodEst
        p <span class='meta-emoji'>&nbsp;üí∏&nbsp;</span> Expect to spend about <strong>$#{meta.drink[1].toFixed(2)}</strong> <sup>?</sup>
        .explainer
          p.explainerText ‚Ü≥&nbsp; #{meta.drink[0]} ($#{meta.drink[1].toFixed(2)}) = $#{meta.drink[1].toFixed(2)}


    // References coffee.js JSON
    if hours
      - const open = hours.open;
      - const closed = hours.close;
      .shopStatus
        p <span class='meta-emoji'>&nbsp;üóì&nbsp;</span>
          span(id= anchorName + 'Hours')
        .explainer2
          p ‚Ü≥ &nbsp;
          .hoursContainer
            +fullHours(hours)
    else
      .shopStatus
        p <span class='meta-emoji'>&nbsp;<i style="color: red" class="fas fa-exclamation-circle"></i>&nbsp;</span> This shop is #[span(style='color: red; font-weight: bold;') closed permanently.]

    
    if distance
      p <span class='meta-emoji'>&nbsp;üöô &nbsp;</span>It's typically a <strong>#{distance} minute</strong> drive from campus at 10 AM.


    br
    .gallery-blackbox
      .fill
        a(data-fancybox=meta.shopName href=heroImg)
          img(src=heroImg)
      .gallery-indicator
        a(data-fancybox=meta.shopName href=heroImg) <i class="far fa-image"></i> View gallery

      .gallery-container.flex-grid
        each url in arr
          +galleryPhoto(meta.shopName, urlBase+url+'/o.jpg')

mixin galleryPhoto(shopName, yelpImg)
  .gallery-photo
    a(data-fancybox=shopName href=yelpImg)
      img(src=yelpImg)

mixin scorecard(goodObj, badObj)
  .scorecard
    .flex-grid
      .score-col
        h2 Best for:
        each pair in Object.entries(goodObj)
          div
            .score-emoji
              span(class=pair[0].slice(0,3))
            .score-text
              p <strong>!{pair[0]}</strong> 
              p.small-note !{pair[1]}
      .score-col
        h2 Not great for:
        each pair in Object.entries(badObj)
          div
            .score-emoji
              span(class=pair[0].slice(0,3))
            .score-text
              p <strong>!{pair[0]}</strong>
              p.small-note !{pair[1]}


mixin recs(itemObjs)
  .recs 
    h2 Ben's Recommendations
    ol
      each item in itemObjs
        +imgLink(item)
    br
    br

mixin reviewNotes(meta, notes, guestNotes, recs)
  - const shopUrl = 'https://www.yelp.com/biz/' + meta.yelpUrl;
  .writeup
    h2 Notes on !{meta.shopName}
    each par in notes
      h6!= par
    if guestNotes
      .writeup-guest
        img(style='background-image: url(' + guestNotes.img + ')')
        h6 <strong>From !{guestNotes.name}</strong> !{guestNotes.notes}
    +recs(recs)
  .proj-button-container
    a(href=shopUrl class='proj-button' target='_blank') <i class="fab fa-yelp"></i>&nbsp; !{meta.shopName} on Yelp 
    hr
    br
    br

mixin review(shops)        
  each shop in shops
    .review
      +reviewGallery(shop[0].meta, shop[0].hours, shop[0].distance, shop[0].images)
      +scorecard(shop[0].good, shop[0].bad)
      +reviewNotes(shop[0].meta, shop[0].notes, shop[0].guestNotes, shop[0].recs)

mixin pulse(pulses, current)
  - const currentPulse = pulses[current];
  .container
    a(target="_blank" href=currentPulse.link)
      .flex-grid
        .thirds-col#col-bg(style="background-image: url('images/" + currentPulse.img + "');")
        
        .two-thirds-col.card.static
          .pulsetxt
            h2 #{currentPulse.emoji} #{currentPulse.title}
            p 
              | #{currentPulse.sub}
            p.more #{currentPulse.cta} <span>&rarr;</span>

mixin overview(shops)
  h2
    strong Jump to:
  ol.shop-list 
    each shop in shops
      - const date = new Date();
      - let day = date.getDay() - 1;
      -
        const getDate = (dateNum) => {
          let today = 0;
          if (dateNum == -1) {
            today = 0;
          } else {
            today = dateNum;
          }
          return today;
        }

      - const today = getDate(day);
      - const closing = shop[0].hours[today].close;
      - let anchorName = shop[0].meta.shopName.replace(/\s/g, '');
      - anchorName = anchorName.replace(/&/g, 'And').replace('<istyle="color:red"class="fasfa-exclamation-circle"></i>', '');
      if (closing > 21)
        li
          a(href='#' + anchorName class='late-night') !{shop[0].meta.shopName} <span class='open-indicator'>üåù</span>
      else
        li
          a(href='#' + anchorName class='closes-early') !{shop[0].meta.shopName}
  
  p.small-note 
    strong üåù = Open late

mixin bigphoto(img, caption, name)
  .big-photo
    .fill.project-hero-img(style='background-image: url(' + img + ');')&attributes(attributes)= name
    .caption
      p= caption

mixin bigvid(vid, caption)
  <video class="vid-full-width" autoplay controls loop muted playsinline>
    source(src=vid type='video/mp4')
  </video>
  .caption
    p!= caption

mixin bigimg(img, caption)
  img(src=img class="img-full-width")
  .caption
    p!= caption

mixin mediumphoto(img, caption)
  .med-photo
    .fill.project-hero-img(style='background-image: url(' + img + ');')
    .caption
      p= caption

mixin fullHours(hours)
  each day in hours
    - let sto = ((day.open + 11) % 12 + 1);
    - let stc = ((day.close + 11) % 12 + 1);
    -
      if (sto % 1 != 0) {
        sto = sto.toString();
        sto = sto.slice(0,1);
        sto = sto + ":30";
      }
      if (stc % 1 != 0) {
        stc = stc.toString();
        stc = stc.slice(0,1);
        stc = stc + ":30";
      }
    if stc > 3
      span.separate(class=day.day) #{day.day}: #{sto} <span class='light'>AM</span> - #{stc} <span class='light'>PM</span>
    else 
      span.separate(class=day.day) #{day.day}: #{sto} <span class='light'>AM</span> to #{stc} <span class='light'>AM</span>

mixin toggle(toggleObj)
  if toggleObj.checked
    <label class="switch">
      <input id='toggler' type="checkbox" checked>
      <span class="slider round"></span>
    </label>
  else
    <label class="switch">
      <input id='toggler' type="checkbox" checked>
      <span class="slider round"></span>
    </label>

mixin buttonGrid(btnArr)
  .flex-grid.flex-even.btn-grid
    each btn in btnArr
      if btn.inverted
        a(href!=btn.url).btn.btn-inverted.
          !{btn.text}
      else
        a(href!=btn.url).btn.
          !{btn.text}

    //- a(href='./transfer.html').btn.btn-inverted.
    //-   Transfer a domain to Zeit

mixin letter(loc)
  //- if (loc.indexOf('?secret=' !== -1))
  h1!=loc

mixin farewell()
  br
  br
  br
  br
  .center
    .big-emoji üëã
    h1 That's it!
    h6 Thanks for stopping by. If you'd like to contact me, send me an email to bnstnfld + @ + gmail.com
    h6 
      a.orange(href='/') &larr; Go home.

mixin toast()
  .toast
    .toast-x
        i(class="fas fa-times") 
    a(target="_blank" href="https://drinks.benstanfield.io")
        .emoji-toast üì¨
        p <strong>New:</strong> Click here to check out a bartending web app I'm working on!

mixin anchor(name)
  a.anchor(name=name id=name)

mixin index_blocks(projects)
  .flex-grid.thirds
      each project in projects
        +index_card(project)

mixin 3card(url, emoji, title, description, target)
  a(target=target href=url).thirds-col.card
    h2 <span class='emo'>#{emoji}</span> #{title}
    p #{description}
    +more()

mixin index_card(project)
  - const {target, url, emoji, title, description} = project;
  a(target=target href=url).thirds-col.card
    h2 <span class='emo'>#{emoji}</span> #{title}
    p #{description}
    +more()

mixin resume(filePath)
  a(target='_blank' href=filePath id='whisper')
      p Psst, here's my resum√©!

mixin chapter(number, name)
  .full-container
    .chapter-container
      .chapter-emoji  
        h1 üìö
      .chapter-text
        h1.chapter-uppercase Chapter #{number}: 
        h1.chapter-name !{name}

//- mixin snowflakes(numberOfFlakes)
//-   - let n = numberOfFlakes;
//-   while n > 1
//-     - let rand = Math.floor((Math.random()*5) + 1);
//-     - let opacity = Math.floor((Math.random()*100) + 1);
//-     .snowflake
//-       img(src=`../images/projects/holidays/snowflake-${rand}.svg` style=`opacity: ${opacity}%;`)
//-     - n--;

